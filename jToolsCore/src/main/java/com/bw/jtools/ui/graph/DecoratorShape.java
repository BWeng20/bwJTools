/*
 * (c) copyright 2022 Bernd Wengenroth
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package com.bw.jtools.ui.graph;

import com.bw.jtools.io.data.Data;
import com.bw.jtools.io.data.DataInput;
import com.bw.jtools.io.data.DataOutput;
import com.bw.jtools.shape.ShapePainter;
import com.bw.jtools.svg.SVGConverter;
import com.bw.jtools.svg.SVGException;
import com.bw.jtools.svg.ShapeHelper;

import java.awt.Shape;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class DecoratorShape
{

	public static final class DecoratorShapeDefinition implements Data
	{

		public static final class SVGDefinition
		{

			public SVGDefinition(String name, String src)
			{
				name_ = name;
				svgSource_ = src;
			}

			public String name_;
			public String svgSource_;
		}

		public SVGDefinition svg_[];
		public int sequence_[];

		public DecoratorShapeDefinition()
		{
			svg_ = new SVGDefinition[0];
			sequence_ = new int[0];
		}

		public DecoratorShapeDefinition(String svg[], int sequence[])
		{
			sequence_ = sequence;
			svg_ = new SVGDefinition[svg.length];
			for (int i = 0; i < svg.length; ++i)
			{
				svg_[i] = new SVGDefinition(null, svg[i]);
			}
		}

		@Override
		public void write(DataOutput o, int fieldId) throws IOException
		{
			DataOutput so = o.startObject(1);
			so.writeArray(1, sequence_);
			for (int i = 0; i < svg_.length; ++i)
			{
				so.writeString(2 + (2 * i), svg_[i].name_);
				so.writeString(3 + (2 * i), svg_[i].svgSource_);
			}
			so.finish();
		}

		@Override
		public void read(DataInput i) throws IOException
		{
			DataInput si = i.startObject();
			List<String> svgNames = new ArrayList<>();
			List<String> svgSources = new ArrayList<>();
			while (si.hasNextField())
			{
				final int id = si.getFieldId();
				if (id == 1)
				{
					sequence_ = si.readIntArray();
				}
				else if (0 == (id % 1))
				{
					svgNames.add(si.readString());
				}
				else
				{
					svgSources.add(si.readString());
				}
			}
			if (svgNames.size() != svgSources.size())
			{
				throw new IOException("Internal format error");
			}
			svg_ = new SVGDefinition[svgNames.size()];
			for (int idx = 0; idx < svg_.length; ++idx)
				svg_[idx] = new SVGDefinition(svgNames.get(idx), svgSources.get(idx));
		}

	}

	private static final DecoratorShapeDefinition leavesSVG = new DecoratorShapeDefinition(
			new String[]{
					"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n"
							+ "<svg viewBox=\"0 -12.5 22 25\" height=\"25\" width=\"22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n"
							+ " <path style=\"fill:none;stroke:black;stroke-width:1.19891;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n"
							+ "       d=\"M 0.69036276,-0.06685544 C 1.7485388,-0.11513101 2.7247008,0.43611395 3.7446133,0.65912822 5.5577197,0.76569826 6.9129423,-1.1927375 8.7180134,-1.1956467 c 1.8967986,-0.035051 3.6803256,0.96131099 5.5682656,1.0782446 0.702587,0.08007073 1.409589,0.09163717 2.114224,0.05054666\"/>\n"
							+ " <path style=\"fill:none;stroke:#5e8a54;stroke-width:0.599457;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n"
							+ "       d=\"M 0.69036276,-0.06685544 C 1.7485388,-0.11513101 2.7247008,0.43611395 3.7446133,0.65912822 5.5577197,0.76569826 6.9129423,-1.1927375 8.7180134,-1.1956467 c 1.8967986,-0.035051 3.6803256,0.96131099 5.5682656,1.0782446 0.702587,0.08007073 1.409589,0.09163717 2.114224,0.05054666\"/>\n"
							+ " <path fill=\"#5e8a54\" d=\"M 0.43324997,0.49287568 C 3.6112137,1.893427 7.0442217,2.5664758 10.455175,3.1106828 c 4.286224,0.9585808 7.820309,3.8019148 10.90202,6.79566 C 17.493071,11.157775 13.05369,11.471715 9.3389806,9.5788502 8.0004133,8.9219977 6.9222721,7.8674543 5.9464026,6.7685721 3.8495653,4.9036741 3.0909473,1.755693 0.43324961,0.49287164 Z\"/>\n"
							+ " <path fill=\"none\" stroke=\"black\" stroke-width=\"0.455\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.864\"\n"
							+ "       d=\"M 0.43324997,0.49287568 C 3.6112137,1.893427 7.0442217,2.5664758 10.455175,3.1106828 c 4.286224,0.9585808 7.820309,3.8019148 10.90202,6.79566 C 17.493071,11.157775 13.05369,11.471715 9.3389806,9.5788502 8.0004133,8.9219977 6.9222721,7.8674543 5.9464026,6.7685721 3.8495653,4.9036741 3.0909473,1.755693 0.43324961,0.49287164 Z\"/>\n"
							+ " <path fill=\"#5e8a54\" d=\"M 0.69036276,-0.06685544 C -0.70760907,0.03145036 0.78311686,-1.5366103 1.1593451,-2.0273429 2.0845,-3.2365323 3.2511126,-4.3524771 3.7109171,-5.8400409 4.0478819,-6.7688947 4.8059163,-7.5242868 5.463591,-8.2590399 9.4511567,-12.343792 16.136524,-13.529008 21.234933,-10.907957 17.145979,-6.5502189 11.798348,-3.0217539 5.7574881,-2.3034568 4.1711422,-2.1663439 2.3227838,-2.1729775 1.160942,-0.89870583 0.95048016,-0.65658134 0.78951106,-0.37196104 0.69036276,-0.06685544 Z\" />\n"
							+ " <path fill=\"none\" stroke=\"black\" stroke-width=\"0.448\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.864\"\n"
							+ "       d=\"m 0.95761996,-0.19678444 c -1.46416868,0.0979234 0.0483726,-1.61437546 0.43672054,-2.16822376 0.8741992,-1.2073277 1.9124812,-2.3952902 2.256603,-3.8712377 3.0047425,-4.7566691 9.1549185,-6.9750221 14.5842935,-5.9224371 1.133051,0.222694 2.238511,0.594295 3.266953,1.120799 -4.088952,4.3577362 -9.436582,7.8862011 -15.4774434,8.6044982 -1.5863461,0.1371141 -3.4347044,0.1304795 -4.5965472,1.4047501 -0.2104618,0.24212456 -0.37143,0.52674576 -0.47057944,0.83185126 z\"/>\n"
							+ " <path fill=\"#a17e4a\" d=\"M 6.1405412,0.46510149 C 6.7134163,-0.64393266 7.2862905,-1.752956 7.8591631,-2.8619795 7.2862905,-1.752956 6.7134163,-0.64393266 6.1405412,0.46510149 Z\" style=\"stroke-width:0.841674\" />\n"
							+ " <path d=\"m 19.86744,-11.01926 c -6.230174,1.2674757 -12.419574,3.7502732 -17.0347038,8.2448566 -0.1686047,0.1675478 -1.6535017,1.4269298 -0.8576675,0.9304135 2.919581,-2.1493866 5.6673773,-4.6094419 9.0277423,-6.071131 2.844212,-1.3251326 5.858397,-2.2302371 8.864629,-3.1041391 z\"/>\n"
							+ " <path fill-rule=\"evenodd\" color=\"black\" d=\"M 2.2532675,1.3413691 C 7.1799685,5.2312898 12.964654,8.0249242 19.073286,9.4691829 13.006603,8.1864987 7.0303525,5.7846361 2.3146341,1.6734461 2.2941826,1.5627537 2.273721,1.4520613 2.2532695,1.3413689 Z\"/>\n"
							+ "</svg>\n",
					"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n"
							+ "<svg viewBox=\"0 -12.5 22 25\" height=\"25\" width=\"25\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n"
							+ " <path style=\"fill:none;stroke:black;stroke-width:1.2;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-opacity:1\"\n"
							+ "       d=\"M 0.6903,-0.0668 C 1.748,-0.1151 2.8,0.44 3.74,0.66 5.56,0.76 6.9,-1.192 8.718,-1.195 c 1.896,-0.035 3.6803256,0.96131099 5.5682656,1.0782446 0.702587,0.08007073 1.409589,0.09163717 2.114224,0.05054666\"/><path\n"
							+ "        style=\"fill:none;stroke:#5e8a54;stroke-width:0.6;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n"
							+ "        d=\"M 0.690,-0.067 C 1.749,-0.115 2.725,0.436 3.744,0.659 5.557,0.7657 6.9129,-1.193 8.718,-1.196 c 1.897,-0.035 3.68,0.9613 5.568,1.078 0.702,0.08 1.41,0.092 2.114,0.051\"/>\n"
							+ " <path fill=\"#5e8a54\" d=\"M 0.4460,0.5577 C 3.716,1.727 7.189,2.152 10.63,2.451 14.974,3.1 18.702,5.683 21.991,8.448 18.226,9.973 13.821,10.604 9.98,8.982 8.5975591,8.4231313 7.446645,7.4485304 6.395,6.4224 4.1695,4.712 3.187,1.627 0.446,0.558 Z\"/>\n"
							+ " <path fill=\"none\" stroke=\"black\" stroke-width=\"0.455\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.86\" d=\"M 0.446,0.558 C 3.716,1.727 7.189,2.152 10.63,2.451 14.973,3.1 18.702,5.683 21.99,8.448 18.226,9.973 13.820504,10.604304 9.9797414,8.9824073 8.5975591,8.4231313 7.446645,7.4485304 6.3945636,6.4223783 4.1695204,4.7124795 3.1873441,1.6269299 0.44601149,0.55773849 Z\"/>\n"
							+ " <path fill=\"#5e8a54\" d=\"M 0.52,-0.28 C -0.872,-0.447 0.888,-1.706 1.35,-2.117 2.487,-3.13 3.842,-4.006 4.575,-5.379809 5.0810977,-6.2284243 5.9680162,-6.8272639 6.7524836,-7.4247662 11.438987,-10.683995 18.227906,-10.586844 22.740365,-7.0511126 17.9028,-3.5429238 11.985583,-1.0865507 5.9176772,-1.5206622 4.3339461,-1.6852501 2.5200219,-2.0404284 1.1386668,-1.0081965 0.88631035,-0.81011908 0.67454191,-0.56097278 0.51962016,-0.28004738 Z\"/>\n"
							+ " <path fill=\"none\" stroke=\"black\" stroke-width=\"0.448\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.864\"\n"
							+ "       d=\"M 0.80658845,-0.35722998 C -0.64976627,-0.53725698 1.1586193,-1.9334984 1.6444701,-2.404148 2.7307186,-3.4248971 3.9744512,-4.395677 4.5908095,-5.7802142 8.4388801,-9.8846911 14.897102,-10.903085 20.030452,-8.8452301 c 1.070702,0.432428 2.086219,1.005886 2.996881,1.7169373 C 18.18977,-3.6201059 12.272554,-1.1637327 6.2046467,-1.5978445 4.6209153,-1.7624313 2.8069913,-2.1176106 1.4256355,-1.0853799 1.173279,-0.88730238 0.96151129,-0.63815498 0.80658845,-0.35722998 Z\"/>\n"
							+ " <path fill=\"#a17e4a\" d=\"M 6.1405412,0.46510149 C 6.7134163,-0.64393266 7.2862905,-1.752956 7.8591631,-2.8619795 7.2862905,-1.752956 6.7134163,-0.64393266 6.1405412,0.46510149 Z\"\n"
							+ "       style=\"stroke-width:0.841674\" />\n"
							+ " <path  d=\"m 21.418418,-7.4183726 c -6.357416,0.069496 -12.9040403,1.3401878 -18.2841491,4.8835099 -0.1971831,0.1327353 -1.892985,1.0894056 -1.0177781,0.7519247 3.272615,-1.5600664 6.4351321,-3.4576287 10.0108942,-4.2591966 3.043116,-0.7648271 6.173923,-1.085104 9.291033,-1.376238 z\"/>\n"
							+ " <path fill-rule=\"evenodd\" color=\"black\" d=\"M 2.322136,1.2736781 C 7.5148363,4.8006783 13.484784,7.1727464 19.681182,8.1756996 13.538199,7.3309009 7.4052439,5.3633208 2.4071335,1.6005059 2.378805,1.491563 2.3504665,1.3826207 2.322138,1.2736778 Z\"/>\n"
							+ "</svg>\n",
					"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n"
							+ "<svg viewBox=\"0 -12.5 22 25\" height=\"25\"   width=\"22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n"
							+ " <path style=\"fill:none;stroke:black;stroke-width:1.19891;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n"
							+ "       d=\"M 0.69036276,-0.06685544 C 1.7485388,-0.11513101 2.7247008,0.43611395 3.7446133,0.65912822 5.5577197,0.76569826 6.9129423,-1.1927375 8.7180134,-1.1956467 c 1.8967986,-0.035051 3.6803256,0.96131099 5.5682656,1.0782446 0.702587,0.08007073 1.409589,0.09163717 2.114224,0.05054666\"/>\n"
							+ " <path style=\"fill:none;stroke:#5e8a54;stroke-width:0.599457;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n"
							+ "       d=\"M 0.69036276,-0.06685544 C 1.7485388,-0.11513101 2.7247008,0.43611395 3.7446133,0.65912822 5.5577197,0.76569826 6.9129423,-1.1927375 8.7180134,-1.1956467 c 1.8967986,-0.035051 3.6803256,0.96131099 5.5682656,1.0782446 0.702587,0.08007073 1.409589,0.09163717 2.114224,0.05054666\"/>\n"
							+ " <path fill=\"#5e8a54\" d=\"M 0.43324997,0.49287568 C 3.6112137,1.893427 7.0442217,2.5664758 10.455175,3.1106828 c 4.286224,0.9585808 7.820309,3.8019148 10.90202,6.79566 C 17.493071,11.157775 13.05369,11.471715 9.3389806,9.5788502 8.0004133,8.9219977 6.9222721,7.8674543 5.9464026,6.7685721 3.8495653,4.9036741 3.0909473,1.755693 0.43324961,0.49287164 Z\"/>\n"
							+ " <path fill=\"none\" stroke=\"black\" stroke-width=\"0.455\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.864\"\n"
							+ "       d=\"M 0.43324997,0.49287568 C 3.6112137,1.893427 7.0442217,2.5664758 10.455175,3.1106828 c 4.286224,0.9585808 7.820309,3.8019148 10.90202,6.79566 C 17.493071,11.157775 13.05369,11.471715 9.3389806,9.5788502 8.0004133,8.9219977 6.9222721,7.8674543 5.9464026,6.7685721 3.8495653,4.9036741 3.0909473,1.755693 0.43324961,0.49287164 Z\"/>\n"
							+ " <path fill=\"#5e8a54\" d=\"M 0.69036276,-0.06685544 C -0.70760907,0.03145036 0.78311686,-1.5366103 1.1593451,-2.0273429 2.0845,-3.2365323 3.2511126,-4.3524771 3.7109171,-5.8400409 4.0478819,-6.7688947 4.8059163,-7.5242868 5.463591,-8.2590399 9.4511567,-12.343792 16.136524,-13.529008 21.234933,-10.907957 17.145979,-6.5502189 11.798348,-3.0217539 5.7574881,-2.3034568 4.1711422,-2.1663439 2.3227838,-2.1729775 1.160942,-0.89870583 0.95048016,-0.65658134 0.78951106,-0.37196104 0.69036276,-0.06685544 Z\" />\n"
							+ " <path fill=\"none\" stroke=\"black\" stroke-width=\"0.448\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.864\"\n"
							+ "       d=\"m 0.95761996,-0.19678444 c -1.46416868,0.0979234 0.0483726,-1.61437546 0.43672054,-2.16822376 0.8741992,-1.2073277 1.9124812,-2.3952902 2.256603,-3.8712377 3.0047425,-4.7566691 9.1549185,-6.9750221 14.5842935,-5.9224371 1.133051,0.222694 2.238511,0.594295 3.266953,1.120799 -4.088952,4.3577362 -9.436582,7.8862011 -15.4774434,8.6044982 -1.5863461,0.1371141 -3.4347044,0.1304795 -4.5965472,1.4047501 -0.2104618,0.24212456 -0.37143,0.52674576 -0.47057944,0.83185126 z\"/>\n"
							+ " <path fill=\"#a17e4a\" d=\"M 6.1405412,0.46510149 C 6.7134163,-0.64393266 7.2862905,-1.752956 7.8591631,-2.8619795 7.2862905,-1.752956 6.7134163,-0.64393266 6.1405412,0.46510149 Z\" style=\"stroke-width:0.841674\" />\n"
							+ " <path d=\"m 19.86744,-11.01926 c -6.230174,1.2674757 -12.419574,3.7502732 -17.0347038,8.2448566 -0.1686047,0.1675478 -1.6535017,1.4269298 -0.8576675,0.9304135 2.919581,-2.1493866 5.6673773,-4.6094419 9.0277423,-6.071131 2.844212,-1.3251326 5.858397,-2.2302371 8.864629,-3.1041391 z\"/>\n"
							+ " <path fill-rule=\"evenodd\" color=\"black\" d=\"M 2.2532675,1.3413691 C 7.1799685,5.2312898 12.964654,8.0249242 19.073286,9.4691829 13.006603,8.1864987 7.0303525,5.7846361 2.3146341,1.6734461 2.2941826,1.5627537 2.273721,1.4520613 2.2532695,1.3413689 Z\"/>\n"
							+ "</svg>\n",
					"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n"
							+ "<svg\n"
							+ "   viewBox=\"0 -18 20 36\" height=\"30\" width=\"50\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n"
							+ "  <defs>\n"
							+ "    <radialGradient\n"
							+ "       id=\"lg\" gradientUnits=\"objectBoundingBox\"\n"
							+ "       cx=\"0.7\" cy=\"0.6\">\n"
							+ "      <stop style=\"stop-color:#e5dd1c;stop-opacity:1;\" offset=\"0\"/>\n"
							+ "      <stop style=\"stop-color:#E5A31C;stop-opacity:1;\" offset=\"1\"/>\n"
							+ "    </radialGradient>\n"
							+ "  </defs>\n"
							+ "  <path fill=\"#a17e4a\" d=\"m 26.618472,-4.1876759 c -1.261845,1.793895 -2.523687,3.58777206 -3.785526,5.3816494 1.261839,-1.79387734 2.523681,-3.5877544 3.785526,-5.3816494 z\" style=\"stroke-width:1.48\"/>\n"
							+ "  <path fill=\"#5e8a54\" d=\"M 16.786271,3.4575165 C 16.396322,4.1988839 15.67268,4.7460861 15.035706,5.2875065 11.216266,8.2593126 5.46469,8.4851929 1.4841892,5.6968194 5.4202119,2.5073998 10.317953,0.15939406 15.474447,0.25149216 c 2.541726,0.6698643 1.788009,2.60523454 1.311824,3.20602434 z\" style=\"stroke-width:0.85\" />\n"
							+ "  <path fill=\"none\" stroke=\"black\" stroke-width=\"0.38\" d=\"M 16.791034,3.7971989 C 13.719732,7.4464978 8.2987393,8.6017346 3.859698,7.0926389 2.9336677,6.7751614 2.0479532,6.3357909 1.2447593,5.7751812 5.1807803,2.585763 10.07852,0.23775716 15.235016,0.32985536 c 1.46044,0.3989677 3.161635,0.78964864 1.556018,3.46734354 z\"/>\n"
							+ "  <path d=\"M 2.6199538,5.9477263 C 7.9986765,5.6003546 12.009733,5.2824986 16.403452,2.0387125 13.312088,3.4762969 11.612575,4.3828152 9.6926947,4.7098099 6.939042,5.3406147 5.2455332,5.5597919 2.6199538,5.9477263 Z\" stroke-width=\"0.85\" />\n"
							+ "  <path fill=\"#5e8a54\" d=\"M 11.145652,-0.99657404 C 7.4362459,-0.91362704 3.9896672,-2.6630949 0.88702558,-4.6440869 c 2.94417452,-1.948114 6.53909422,-3.191148 9.95467642,-2.322567 1.22601,0.290648 2.312831,0.990057 3.323848,1.750959 5.267225,5.11662036 3.236209,3.3466984 -3.019898,4.21912086 z\" stroke-width=\"0.877483\" />\n"
							+ "  <path fill=\"none\" stroke=\"black\" stroke-width=\"0.399254\" d=\"M 11.145652,-0.99657404 C 7.4362459,-0.91362704 3.9896672,-2.6630949 0.88702558,-4.6440869 c 2.94417452,-1.948114 6.53909422,-3.191148 9.95467642,-2.322567 1.22601,0.290648 2.312831,0.990057 3.323848,1.750959 5.379722,4.1920758 2.878675,4.0678598 -3.019898,4.21912086 z\"/>\n"
							+ "  <path color=\"black\" d=\"m 2.8496612,-4.7534729 c 5.2362558,-0.183002 10.0492418,0.242875 13.6137638,2.381462 -3.795239,-1.839774 -11.3375621,-2.381846 -13.6137638,-2.381462 z\" style=\"stroke-width:0.877483\" />\n"
							+ "  <path fill=\"#5e8a54\" d=\"m 20.024624,-6.1098139 c 0.0852,-0.766409 -0.183685,-1.55723 -0.389569,-2.298874 -1.376067,-4.2377471 -5.637939,-7.3810191 -10.1048906,-7.3123361 1.3526756,4.463806 3.8710276,8.7832021 7.8437626,11.3767481 1.476417,0.369923 2.638243,1.668273 2.650697,-1.765538 z\" stroke-width=\"0.779902\" />\n"
							+ "  <path fill=\"none\" stroke=\"black\" stroke-width=\"0.349396\" d=\"m 20.203291,-6.3662139 c -0.457443,-4.3675681 -3.988758,-8.0482981 -8.14554,-9.1913801 -0.868521,-0.236428 -1.769164,-0.35914 -2.669467,-0.346831 1.352674,4.463804 3.871027,8.7832001 7.843763,11.3767471 2.284726,1.639662 2.885894,0.994064 2.971244,-1.838536 z\"/>\n"
							+ "  <path d=\"m 10.524037,-15.325521 c 3.915437,3.043249 5.539439,4.389498 7.762278,8.9192281 -1.870386,-2.869699 -1.886607,-2.764436 -2.640167,-3.6792381 -1.529802,-1.911515 -3.32335,-3.588043 -5.122111,-5.23999 z\" style=\"stroke-width:0.779902\" />\n"
							+ "  <path fill=\"#5e8a54\" d=\"m 15.586068,6.4160716 c -2.032887,3.0882599 -2.36606,6.9161664 -2.320103,10.5751844 3.216661,-1.463455 6.17704,-3.846308 7.244073,-7.1858061 0.401,-1.1876146 0.380227,-2.4722078 0.266981,-3.7250701 -1.084856,-4.1068355 -1.649385,-4.5279522 -5.190951,0.3356918 z\" style=\"stroke-width:0.876018\" />\n"
							+ "  <path fill=\"none\" stroke=\"black\" stroke-width=\"0.398588\" d=\"m 15.586068,6.4160716 c -2.032887,3.0882599 -2.36606,6.9161664 -2.320103,10.5751844 3.216661,-1.463455 6.17704,-3.846308 7.244073,-7.1858061 0.401,-1.1876146 0.380227,-2.4722078 0.266981,-3.7250701 -0.868706,-5.0288686 -2.438205,-3.8819221 -5.190951,0.3356918 z\"/>\n"
							+ "  <path color=\"black\" d=\"M 14.173947,16.366544 C 17.03695,11.401072 17.996271,8.1107445 18.924458,3.5720171 17.292125,8.6820613 16.72216,12.196138 14.173947,16.366544 Z\" stroke-width=\"0.876018\" />\n"
							+ "  <path fill=\"#5e8a54\" d=\"m 24.701405,1.9783364 c 0.755449,0.3619161 1.329362,1.0645626 1.894254,1.6808168 3.112734,3.705488 3.553812,9.4445738 0.916437,13.5266888 C 24.177535,13.372001 21.647789,8.5656113 21.546748,3.4092835 22.707657,2.2773426 23.480753,1.4444279 24.701405,1.9783364 Z\" style=\"stroke-width:0.847766\" />\n"
							+ "  <path fill=\"none\" stroke=\"black\" stroke-width=\"0.3798\" d=\"m 25.040671,1.9608583 c 3.76174,2.9325067 5.119144,8.3064437 3.777318,12.7988767 -0.282581,0.937269 -0.68848,1.838813 -1.218623,2.662435 C 24.264809,13.608331 21.735063,8.8019419 21.63402,3.6456129 22.312883,2.4373556 23.711708,1.0653147 25.040671,1.9608583 Z\"/>\n"
							+ "  <path d=\"M 27.720299,16.041479 C 27.171775,10.679535 26.583593,7.073806 23.177568,2.8046254 c 1.031822,1.578194 2.334512,3.937506 2.757893,5.4756948 0.880191,2.5102438 1.298867,5.1519458 1.784838,7.7611588 z\" style=\"stroke-width:0.847766\" />\n"
							+ "  <path fill=\"#5e8a54\" d=\"m 21.823602,-8.1920119 c 0.746334,-3.5302541 3.483515,-7.5214291 6.109693,-10.0224711 1.245433,3.216694 1.657307,6.894152 0.04746,9.9365741 -0.557223,1.09672 -1.482501,1.971598 -2.450915,2.761159 -5.40804,4.1393971 -3.615064,-0.558164 -3.706238,-2.675262 z\" stroke-width=\"0.865799\" />\n"
							+ "  <path fill=\"none\" stroke=\"black\" stroke-width=\"0.393939\" d=\"m 22.083951,-9.3055009 c 0.746333,-3.5302541 3.223166,-6.4079401 5.849344,-8.9089821 1.245433,3.216694 1.657307,6.894152 0.04746,9.9365741 -0.557223,1.09672 -1.482501,1.971598 -2.450915,2.761159 -3.873164,3.290371 -4.764703,1.672392 -3.445891,-3.788751 z\"/>\n"
							+ "  <path fill-rule=\"evenodd\" color=\"black\" d=\"m 22.921667,-5.5505249 c 2.960745,-4.448177 3.635051,-5.6138341 4.680695,-10.7816821 -0.804601,5.627837 -1.904902,7.2621051 -4.680695,10.7816821 z\" stroke-width=\"0.865799\" />\n"
							+ "  <path fill=\"#5e8a54\" d=\"m 24.601011,-3.6081119 c 0.866879,-0.500829 1.479953,-0.715159 2.247522,-0.946098 4.491671,-1.134672 9.62624,1.055336 11.931927,5.23157636 C 34.100469,1.9622184 28.964649,2.2335932 24.658255,-0.31668704 24.021743,-1.911932 23.086022,-2.4924059 24.601015,-3.6081119 Z\" stroke-width=\"0.826671\" />\n"
							+ "  <path fill=\"none\" stroke=\"black\" stroke-width=\"0.370348\" d=\"m 24.81971,-3.8896499 c 4.120233,-2.059285 9.259228,-0.881151 12.476483,2.3189294 0.670078,0.66999606 1.256208,1.43439176 1.722275,2.27523026 C 34.33848,1.9893613 29.751444,2.3179956 25.343862,0.11296286 24.413339,-0.23119644 22.809049,-2.8358639 24.81971,-3.8896499 Z\"/>\n"
							+ "  <path d=\"M 37.902729,-0.01829324 C 33.126226,-1.9146026 29.98148,-2.7894399 24.681761,-1.9944289 c 2.464646,-0.053824 4.636819,0.03227 5.854707,0.2110775 2.50771,0.3301741 4.946517,1.03821466 7.366261,1.76505816 z\" style=\"stroke-width:0.826671\" />\n"
							+ "  <circle style=\"fill:url(#lg);fill-opacity:1;stroke:black;stroke-width:0.3432;stroke-miterlimit:4;\" cx=\"21.82283\" cy=\"-2.4779155\" r=\"2.8391149\" />\n"
							+ "  <circle style=\"fill:url(#lg);fill-opacity:1;stroke:black;stroke-width:0.3432;stroke-miterlimit:4;\" cx=\"18.263029\" cy=\"-0.78908181\" r=\"2.8391149\" />\n"
							+ "  <circle style=\"fill:url(#lg);fill-opacity:1;stroke:black;stroke-width:0.3432;stroke-miterlimit:4;\" cx=\"21.717121\" cy=\"1.7419357\" r=\"2.8391149\" />\n"
							+ "</svg>\n"},
			new int[]{0, 1, 2, 3, 4, 6, 13, 21, 34, 55, 89}
	);

	private static final DecoratorShapeDefinition leavesBwSVG = new DecoratorShapeDefinition(
			new String[]{
					"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
							+ "<svg width=\"22\" height=\"25\" version=\"1.1\" viewBox=\"0 -12.5 22 25\" xmlns=\"http://www.w3.org/2000/svg\">\n"
							+ "<path d=\"m.69036-.066855c1.0582-.048276 2.0343.50297 3.0543.72598 1.8131.10657 3.1683-1.8519 4.9734-1.8548 1.8968-.035051 3.6803.96131 5.5683 1.0782.70259.080071 1.4096.091637 2.1142.050547\" fill=\"none\" stroke=\"#000\" stroke-width=\"1.1989\"/>\n"
							+ "<path d=\"m.69036-.066855c1.0582-.048276 2.0343.50297 3.0543.72598 1.8131.10657 3.1683-1.8519 4.9734-1.8548 1.8968-.035051 3.6803.96131 5.5683 1.0782.70259.080071 1.4096.091637 2.1142.050547\" fill=\"none\" stroke=\"background\" stroke-width=\".59946\"/>\n"
							+ "<path d=\"m.43325.49288c3.178 1.4006 6.611 2.0736 10.022 2.6178 4.2862.95858 7.8203 3.8019 10.902 6.7957-3.8641 1.2514-8.3035 1.5654-12.018-.32749-1.3386-.65685-2.4167-1.7114-3.3926-2.8103-2.0968-1.8649-2.8555-5.0129-5.5132-6.2757z\" fill=\"background\"/>\n"
							+ "<path d=\"m.43325.49288c3.178 1.4006 6.611 2.0736 10.022 2.6178 4.2862.95858 7.8203 3.8019 10.902 6.7957-3.8641 1.2514-8.3035 1.5654-12.018-.32749-1.3386-.65685-2.4167-1.7114-3.3926-2.8103-2.0968-1.8649-2.8555-5.0129-5.5132-6.2757z\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.864\" stroke-width=\".455\"/>\n"
							+ "<path d=\"m.69036-.066855c-1.398.098306.092754-1.4698.46898-1.9605.92515-1.2092 2.0918-2.3251 2.5516-3.8127.33696-.92885 1.095-1.6842 1.7527-2.419 3.9876-4.0848 10.673-5.27 15.771-2.6489-4.089 4.3577-9.4366 7.8862-15.477 8.6045-1.5863.13711-3.4347.13048-4.5965 1.4048-.21046.24212-.37143.52674-.47058.83185z\" fill=\"background\"/>\n"
							+ "<path d=\"m.95762-.19678c-1.4642.097923.048373-1.6144.43672-2.1682.8742-1.2073 1.9125-2.3953 2.2566-3.8712 3.0047-4.7567 9.1549-6.975 14.584-5.9224 1.1331.22269 2.2385.5943 3.267 1.1208-4.089 4.3577-9.4366 7.8862-15.477 8.6045-1.5863.13711-3.4347.13048-4.5965 1.4048-.21046.24212-.37143.52675-.47058.83185z\" fill=\"none\" stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"3.864\" stroke-width=\".448\"/>\n"
							+ "<path d=\"m6.1405.4651c.57288-1.109 1.1457-2.2181 1.7186-3.3271-.57287 1.109-1.1457 2.218-1.7186 3.3271z\" fill=\"#a17e4a\" stroke-width=\".84167\"/>\n"
							+ "<path d=\"m19.867-11.019c-6.2302 1.2675-12.42 3.7503-17.035 8.2449-.1686.16755-1.6535 1.4269-.85767.93041 2.9196-2.1494 5.6674-4.6094 9.0277-6.0711 2.8442-1.3251 5.8584-2.2302 8.8646-3.1041z\"/>\n"
							+ "<path d=\"m2.2533 1.3414c4.9267 3.8899 10.711 6.6836 16.82 8.1278-6.0667-1.2827-12.043-3.6845-16.759-7.7957-.020452-.11069-.040913-.22138-.061365-.33208z\" color=\"black\" fill-rule=\"evenodd\"/>\n"
							+ "</svg>\n",
					"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
							+ "<svg width=\"25\" height=\"25\" version=\"1.1\" viewBox=\"0 -12.5 22 25\" xmlns=\"http://www.w3.org/2000/svg\">\n"
							+ "<path d=\"m.6903-.0668c1.0577-.0483 2.1097.5068 3.0497.7268 1.82.1 3.16-1.852 4.978-1.855 1.896-.035 3.6803.96131 5.5683 1.0782.70259.080071 1.4096.091637 2.1142.050547\" fill=\"none\" stroke=\"#000\" stroke-width=\"1.2\"/>\n"
							+ "<path d=\"m.69-.067c1.059-.048 2.035.503 3.054.726 1.813.1067 3.1689-1.852 4.974-1.855 1.897-.035 3.68.9613 5.568 1.078.702.08 1.41.092 2.114.051\" fill=\"none\" stroke=\"background\" stroke-width=\".6\"/>\n"
							+ "<path d=\"m.446.5577c3.27 1.1693 6.743 1.5943 10.184 1.8933 4.344.649 8.072 3.232 11.361 5.997-3.765 1.525-8.17 2.156-12.011.534-1.3824-.55887-2.5334-1.5335-3.585-2.5596-2.2255-1.7104-3.208-4.7954-5.949-5.8644z\" fill=\"background\"/>\n"
							+ "<path d=\"m.446.558c3.27 1.169 6.743 1.594 10.184 1.893 4.343.649 8.072 3.232 11.36 5.997-3.764 1.525-8.1695 2.1563-12.01.53441-1.3822-.55928-2.5331-1.5339-3.5852-2.56-2.225-1.7099-3.2072-4.7954-5.9486-5.8646z\" fill=\"none\" stroke=\"#000\" stroke-width=\".455\"/>\n"
							+ "<path d=\"m.52-.28c-1.392-.167.368-1.426.83-1.837 1.137-1.013 2.492-1.889 3.225-3.2628.5061-.84862 1.393-1.4475 2.1775-2.045 4.6865-3.2592 11.475-3.1621 15.988.37365-4.8376 3.5082-10.755 5.9646-16.823 5.5305-1.5837-.16459-3.3977-.51977-4.779.51247-.25236.19808-.46412.44722-.61905.72815z\" fill=\"background\"/>\n"
							+ "<path d=\"m.80659-.35723c-1.4564-.18003.35203-1.5763.83788-2.0469 1.0862-1.0207 2.33-1.9915 2.9463-3.3761 3.8481-4.1045 10.306-5.1229 15.44-3.065 1.0707.43243 2.0862 1.0059 2.9969 1.7169-4.8376 3.5082-10.755 5.9646-16.823 5.5304-1.5837-.16459-3.3977-.51977-4.779.51246-.25236.19808-.46412.44722-.61905.72815z\" fill=\"none\" stroke=\"#000\" stroke-width=\".448\"/>\n"
							+ "<path d=\"m6.1405.4651c.57288-1.109 1.1457-2.2181 1.7186-3.3271-.57287 1.109-1.1457 2.218-1.7186 3.3271z\" fill=\"background\" stroke-width=\".84167\"/>\n"
							+ "<path d=\"m21.418-7.4184c-6.3574.069496-12.904 1.3402-18.284 4.8835-.19718.13274-1.893 1.0894-1.0178.75192 3.2726-1.5601 6.4351-3.4576 10.011-4.2592 3.0431-.76483 6.1739-1.0851 9.291-1.3762z\"/>\n"
							+ "<path d=\"m2.3221 1.2737c5.1927 3.527 11.163 5.8991 17.359 6.902-6.143-.8448-12.276-2.8124-17.274-6.5752-.028328-.10894-.056667-.21789-.084996-.32683z\" color=\"black\" fill-rule=\"evenodd\"/>\n"
							+ "</svg>\n",
					// Flower
					"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
							+ "<svg width=\"38\" height=\"35\" version=\"1.1\" viewBox=\"-20 -6 39 15\" xmlns=\"http://www.w3.org/2000/svg\">\n"
							+ "<path d=\"m7.3369-16.551c-2.6262 2.501-5.1049 5.3778-5.8512 8.9081-.4169 1.7264-.60854 3.0664-.55926 3.991-.56622.06877-1.0907.30424-1.5114.66751l.01403-.01804c.10234-.4319.15724-.99763.1784-1.6998-.45745-4.3676-3.9916-8.0477-8.1484-9.1907-.86852-.23643-1.7677-.35909-2.668-.34678 1.3527 4.4638 3.871 8.7821 7.8437 11.376.49484.35513.90427.59345 1.2528.73566-.76638-.05516-1.5704.41515-1.9745.64747-.47866-.5365-1.2403-1.2096-2.3453-2.0707-1.011-.7609-2.0975-1.4613-3.3235-1.752-.85389-.21714-1.7185-.30146-2.5818-.27662-2.59.07449-5.1645 1.1388-7.3726 2.5999 3.1026 1.981 6.5497 3.7312 10.259 3.6482 1.7962-.04606 3.2702-.06579 4.3097-.19043.06161-.05117.02109.16875.02806.22451-.000372.64883.21941 1.2456.58532 1.7239l-.35079-.29667c-.16117-.04655-.32303-.09258-.48309-.13631-.16114-.0029-.32248-.0039-.48309-.0021-4.979.05709-9.6935 2.3585-13.506 5.4483.80319.56061 1.6859.99949 2.6119 1.317 4.439 1.5091 9.8619.35386 12.933-3.2954.4894-.81618.67205-1.418.64746-1.8742l-.43498-.36883c.39466.20754.84402.32501 1.321.32473.19365-.0031.38641-.02796.5753-.07016.08183.31279.11321.63667.17439.95415-.87089.01-2.008 1.3868-3.4879 3.6542-2.0329 3.0883-2.3652 6.9148-2.3192 10.574 3.2167-1.4635 6.1753-3.8467 7.2423-7.1862.401-1.1876.37985-2.4715.2666-3.7244-.13147-.76104-.27776-1.3793-.443-1.8682l-.24856-.28665c.54125.35829.9906.51182 1.5936.65348.3655 4.8023 2.7886 9.2599 5.9214 12.843.53014-.82362.93617-1.7247 1.2188-2.662 1.3418-4.4924-.01478-9.8664-3.7765-12.799-.15828-.14173-.44218-.19119-.53316-.23052-.20697-1.9585-1.147-1.622-.70559-2.201.16942-.16355.31516-.34687.441-.54322.3119.5581.75405.99841 1.1005 1.1265 4.4076 2.205 8.9929 1.8762 13.673.59133-.46612-.8408-1.0499-1.6031-1.7199-2.2731-2.2119-2.2001-5.3335-3.4454-8.407-3.3395-1.397.04813-2.7836.37477-4.0712 1.0183-.14004.07339-.2587.15703-.36482.24455-.11741-.26556-.27606-.50829-.46505-.72363.44939-.27617.95826-.65283 1.5395-1.1466.96841-.78956 1.8943-1.6635 2.4515-2.7602 1.6098-3.0424 1.1993-6.7217-.0461-9.9384z\" fill=\"background\"/>\n"
							+ "<path d=\"m6.0616-2.5645c-1.2618 1.7939-2.5237 3.5878-3.7855 5.3816 1.2618-1.7939 2.5237-3.5878 3.7855-5.3816z\" fill=\"#a17e4a\" stroke-width=\"1.48\"/>\n"
							+ "<path d=\"m-3.9783-1.4489c-.47323-.54699-1.2617-1.2466-2.4141-2.1445-1.011-.7609-2.0974-1.4601-3.3234-1.7508-.8539-.21714-1.7171-.30139-2.5805-.27656-2.59.07449-5.1653 1.1381-7.3734 2.5992 3.1026 1.981 6.5492 3.7322 10.259 3.6492 1.7962-.04606 3.2706-.06755 4.3102-.19219m.2625 1.6523c-.16117-.04655-.32276-.09221-.48281-.13594-5.1565-.0921-10.054 2.2575-13.99 5.4469.80319.56061 1.6872.99971 2.6133 1.3172 4.439 1.5091 9.8615.35399 12.933-3.2953.4894-.81618.67146-1.4188.64687-1.875\" fill=\"none\" stroke=\"#000\" stroke-width=\".36\"/>\n"
							+ "<path d=\"m-17.937 7.5709c5.3787-.34737 9.3898-.66523 13.783-3.909-3.0914 1.4376-4.7909 2.3441-6.7108 2.6711-2.7537.6308-4.4472.84998-7.0727 1.2379z\" stroke-width=\".85\"/>\n"
							+ "<path d=\"m-17.977-3.1303c4.3703-.20432 8.5989.80189 12.857 2.2386-3.7318-1.1145-10.684-2.239-12.857-2.2386z\" color=\"black\" stroke-width=\".87748\"/>\n"
							+ "<path d=\"m3.3998-2.7239c.45666-.27759.97841-.6647 1.5727-1.1695.96841-.78956 1.8943-1.6642 2.4516-2.7609 1.6098-3.0424 1.1986-6.7208-.046872-9.9375-2.6262 2.501-5.1037 5.3783-5.85 8.9086-.42016 1.7399-.61364 3.0896-.56016 4.0148m-1.4977.62578c.10235-.4319.15697-.99935.17813-1.7016-.45745-4.3676-3.9901-8.0468-8.1469-9.1898-.86852-.23643-1.7692-.35918-2.6695-.34688 1.3527 4.4638 3.8718 8.783 7.8445 11.377.91727.65829 1.5632.94861 2.0133.87656m4.9992 2.6367c.3119.5581.75278.99921 1.0992 1.1273 4.4076 2.205 8.9934 1.8755 13.673.59063-.46607-.84084-1.0502-1.6034-1.7203-2.2734-3.2173-3.2001-8.3579-4.3796-12.478-2.3203-.15424.08084-.28481.17216-.39844.26953\" fill=\"none\" stroke=\"#000\" stroke-width=\".36\"/>\n"
							+ "<path d=\"m-10.033-13.702c3.9154 3.0432 5.5394 4.3895 7.7623 8.9192-1.8704-2.8697-1.8866-2.7644-2.6402-3.6792-1.5298-1.9115-3.3234-3.588-5.1221-5.24z\" stroke-width=\".7799\"/>\n"
							+ "<path d=\"m-1.4822 4.3847c-.87089.00996-2.0076 1.3865-3.4875 3.6539-2.0329 3.0883-2.3663 6.916-2.3203 10.575 3.2167-1.4635 6.1752-3.8464 7.2422-7.1859.401-1.1876.38043-2.4714.26719-3.7242-.13147-.76104-.27773-1.379-.44297-1.868m1.3453.36562c.36551 4.8023 2.7876 9.2607 5.9203 12.844.53014-.82362.93617-1.7252 1.2188-2.6625 1.3418-4.4924-.01404-9.8667-3.7758-12.799-.16081-.10837-.3237-.18342-.48516-.22969\" fill=\"none\" stroke=\"#000\" stroke-width=\".36\"/>\n"
							+ "<path d=\"m-6.3829 17.99c2.863-4.9655 3.8223-8.2558 4.7505-12.795-1.6323 5.11-2.2023 8.6241-4.7505 12.795z\" color=\"black\" stroke-width=\".87602\"/>\n"
							+ "<path d=\"m3.306 5.3292c.884 1.4708 1.7997 3.2487 2.1422 4.493.88019 2.5102 1.3 5.1509 1.7859 7.7602-.50353-4.9222-1.0399-8.3652-3.7594-12.199-.031836-.044892-.065988-.090936-.098436-.13594z\" stroke-width=\"1.2\"/>\n"
							+ "<path d=\"m2.3648-3.9271c2.9607-4.4482 3.6351-5.6138 4.6807-10.782-.8046 5.6278-1.9049 7.2621-4.6807 10.782z\" color=\"black\" fill-rule=\"evenodd\" stroke-width=\".8658\"/>\n"
							+ "<path d=\"m17.346 1.6049c-4.7765-1.8963-7.9212-2.7711-13.221-1.9761 2.4646-.05382 4.6368.03227 5.8547.21108 2.5077.33017 4.9465 1.0382 7.3663 1.7651z\" stroke-width=\".82667\"/>\n"
							+ "<path d=\"m3.1865 1.2534c.55157-.53247.86435-1.2654.86719-2.032-.0003972-1.5674-1.2709-2.8379-2.8383-2.8383-1.1555.0035-2.1935.707-2.625 1.7789\" fill=\"none\" stroke=\"#000\" stroke-width=\".3432\"/>\n"
							+ "<path d=\"m.50995.54329c-.11419-1.4781-1.3464-2.6194-2.8289-2.6203-1.5683-.000898-2.8402 1.27-2.8406 2.8383-.0008988 1.5692 1.2714 2.8415 2.8406 2.8406.21737-.0034.43363-.03167.64453-.08437\" fill=\"none\" stroke=\"#000\" stroke-width=\".3432\"/>\n"
							+ "<circle cx=\"1.0818\" cy=\"3.3397\" r=\"2.839\" fill=\"none\" stroke=\"#000\" stroke-width=\".3432\"/>\n"
							+ "</svg>"
			},
			new int[]{0, 1, 2, 3, 4, 6, 13, 21, 34, 55, 89});

	static DecoratorShape createDecoratorShape(DecoratorShapeDefinition dsd)
	{
		ShapePainter painter[] = new ShapePainter[dsd.svg_.length];
		try
		{
			for (int i = 0; i < dsd.svg_.length; ++i)
			{
				SVGConverter svgConverter = new SVGConverter(dsd.svg_[i].svgSource_);
				ShapePainter p = painter[i] = new ShapePainter();
				p.setShape(svgConverter.getShape());
			}
		}
		catch (SVGException e)
		{
			e.printStackTrace();
		}
		final double w = painter[0].getAreaWidth();
		return new DecoratorShape(painter, w, dsd.sequence_);
	}

	public static final DecoratorShape LEAVES = createDecoratorShape(leavesSVG);
	public static final DecoratorShape LEAVES_BW = createDecoratorShape(leavesBwSVG);

	private final List<ShapePainter> painter_;
	private double width_;
	private final int sequence_[];

	public DecoratorShape(ShapePainter[] painter, double width, int sequence[])
	{
		painter_ = new ArrayList<>(Arrays.asList(painter));
		width_ = width;
		sequence_ = sequence;
	}

	public int getNumberOfVariants()
	{
		return painter_.size();
	}

	public ShapePainter getVariante(int idx)
	{
		return painter_.get(idx);
	}

	public double getDistance()
	{
		return 0.6 * width_;
	}

	public double getWidth()
	{
		return width_;
	}

	public void paintAlong(GraphicContext ctx, Shape shape, double start, double end)
	{
		if (shape != null)
		{
			paintAlong(ctx, new ShapeHelper(shape), start, end, 0, -2);
		}
	}

	/**
	 * @param firstVariantIndex Index of first shape to use. If negative,
	 *                          counting from end (e-g- -2 results in index=N-3).
	 * @param lastVariantIndex  Index of last used shape, if negative, counting
	 *                          from end (e-g- -2 results in index=N-3).
	 */
	public void paintAlong(GraphicContext ctx, ShapeHelper outline, double start, double end, int firstVariantIndex, int lastVariantIndex)
	{
		if (outline != null)
		{
			final int maxIndex = painter_.size() - 1;
			if (firstVariantIndex < 0)
			{
				firstVariantIndex = painter_.size() + firstVariantIndex;
			}
			if (firstVariantIndex > maxIndex)
			{
				firstVariantIndex = maxIndex;
			}

			if (lastVariantIndex < 0)
			{
				lastVariantIndex = painter_.size() - 1 + lastVariantIndex;
			}
			if (lastVariantIndex > maxIndex)
			{
				lastVariantIndex = maxIndex;
			}

			final int N = lastVariantIndex - firstVariantIndex + 1;

			if (end <= 0)
			{
				end = outline.getOutlineLength() + end;
			}
			else if (end > outline.getOutlineLength())
			{
				// Can't paint longer than the end.
				end = outline.getOutlineLength();
			}
			final double d = end;
			double pos = start;
			if (pos < 0)
			{
				pos = 0;
			}

			final double D = getDistance();

			final GraphicContext gl = new GraphicContext(ctx);
			try
			{
				final AffineTransform t = gl.g2D_.getTransform();

				if (ctx.debug_)
				{
					// Debugging: Shows the path
					gl.g2D_.setPaint(ctx.debugPaint_);
					gl.g2D_.setStroke(ctx.debugStroke_);
					gl.g2D_.draw(outline.getShape());
				}

				int vi = 0;
				ShapeHelper.PointOnPath pop1 = outline.pointAtLength(pos);
				while (pos < d)
				{
					pos += D;
					ShapeHelper.PointOnPath pop2 = outline.pointAtLength(pos);
					gl.g2D_.setTransform(t);
					gl.g2D_.translate(pop1.x_, pop1.y_);
					if (pop2 == null)
					{
						gl.g2D_.rotate(pop1.angle_);
					}
					else
					{
						gl.g2D_.rotate(Math.atan2(pop2.y_ - pop1.y_, pop2.x_ - pop1.x_));
					}

					ShapePainter painter = painter_.get(firstVariantIndex + (sequence_[vi % sequence_.length] % N));

					painter.paint(gl.g2D_, gl.currentColor_, gl.currentBackground_, false);

					if (gl.debug_)
					{
						gl.g2D_.setPaint(gl.debugPaint_);
						gl.g2D_.setStroke(gl.debugStroke_);
						gl.g2D_.draw(painter.getArea());
						gl.g2D_.drawLine(0, -2, 0, 2);
					}

					++vi;
					pop1 = pop2;
				}
			}
			finally
			{
				gl.dispose();
			}
		}
	}

	public void drawAtPoint(GraphicContext ctx, Point2D.Float point, int index)
	{
		if (point != null)
		{
			ShapePainter painter = getVariante(painter_.size() - 1);
			GraphicContext lctx = new GraphicContext(ctx);
			try
			{
				lctx.g2D_.translate(point.x, point.y);
				painter.paint(lctx.g2D_, lctx.currentColor_, lctx.currentBackground_, false);
				if (ctx.debug_)
				{
					lctx.g2D_.setPaint(lctx.debugPaint_);
					lctx.g2D_.setStroke(lctx.debugStroke_);
					lctx.g2D_.draw(painter.getArea());
					lctx.g2D_.drawLine(-2, 0, 2, 0);
					lctx.g2D_.drawLine(0, -2, 0, 2);
				}
			}
			finally
			{
				lctx.dispose();
			}
		}
	}

}
