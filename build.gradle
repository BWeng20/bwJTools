plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}


subprojects {

    group = "io.github.bweng20"
    version="1.04"

    repositories {
        mavenCentral()
    }

    plugins.withType(JavaPlugin).configureEach {
        java {
            modularity.inferModulePath = true
            sourceCompatibility= JavaVersion.VERSION_1_9
            targetCompatibility= JavaVersion.VERSION_1_9
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    println "Configure $project.name, Gradle version $project.gradle.gradleVersion"

    task say_hello {
        doLast { task ->
            println "I'm $task.project.name"
            if ( task.project != task.project.rootProject ) {
                println "  Dependencies ${task.project.configurations.compileClasspath.collect()}"
            } else {
                println "  I am root"

            }
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
        duplicatesStrategy = 'exclude'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    processResources {
        duplicatesStrategy = 'exclude'
    }

    dependencies {
        compileOnly 'org.apache.logging.log4j:log4j-api:2.17.2'
        compileOnly 'org.apache.logging.log4j:log4j-core:2.17.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    }
}

